{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","status","isVisible","goods","setGoods","filteredNumber","setFilterNumber","filterGoods","filter","good","length","className","type","onClick","reverse","sort","a","b","name","id","onChange","event","currentTarget","value","map","number","ReactDOM","render","document","getElementById"],"mappings":"iOAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBAAS,GAAD,OAAKF,IAAvC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA0CJ,mBAAS,GAAnD,mBAAOK,EAAP,KAAuBC,EAAvB,KAIMC,EAAwB,YAAIJ,GAC/BK,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUL,KAEjC,OACE,sBAAKM,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,mBACEV,EAWE,gCACE,wBACEU,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAMT,EAAS,YAAID,GAAOW,YAHrC,qBAQA,wBACEH,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAMT,EAAS,YAAID,GAAOY,SAHrC,iCAQA,wBACEJ,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAMT,EAAS,GAAD,OAAKN,KAH9B,mBAQA,wBACEa,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAMT,EAAS,YAAID,GACzBY,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEN,OAASO,EAAEP,YAJjC,4BASA,wBACEC,UAAU,SACVO,KAAK,GACLC,GAAG,GACHC,SAAU,SAACC,GAAD,OAAWf,GAAiBe,EAAMC,cAAcC,QAJ5D,SArDgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GA2D9BC,KAAI,SAAAC,GAAM,OACjB,wBAAQF,MAAOE,EAAf,SAAqCA,GAATA,QAIhC,oBAAId,UAAU,OAAd,SACGJ,EAAYiB,KAAI,SAAAf,GAAI,OACnB,oBAAIE,UAAU,OAAd,SACGF,GADuBA,WAxDhC,wBACEE,UAAU,SACVC,KAAK,SACLC,QAAS,kBAAMX,GAAU,IAH3B,uBC5BVwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.aa2abe2e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [status, isVisible] = useState(false);\n  const [goods, setGoods] = useState([...goodsFromServer]);\n  const [filteredNumber, setFilterNumber] = useState(1);\n\n  const numbers: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n  const filterGoods: string[] = [...goods]\n    .filter(good => good.length <= filteredNumber);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Goods</h1>\n      {!status\n        ? (\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={() => isVisible(true)}\n          >\n            Start\n          </button>\n        )\n        : (\n          <div>\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setGoods([...goods].reverse())}\n            >\n              Reverse\n            </button>\n\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setGoods([...goods].sort())}\n            >\n              Sort alphabetically\n            </button>\n\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setGoods([...goodsFromServer])}\n            >\n              Reset\n            </button>\n\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setGoods([...goods]\n                .sort((a, b) => a.length - b.length))}\n            >\n              Sort by length\n            </button>\n\n            <select\n              className=\"button\"\n              name=\"\"\n              id=\"\"\n              onChange={(event) => setFilterNumber(+event.currentTarget.value)}\n            >\n              {numbers.map(number => (\n                <option value={number} key={number}>{number}</option>\n              ))}\n\n            </select>\n            <ul className=\"list\">\n              {filterGoods.map(good => (\n                <li className=\"item\" key={good}>\n                  {good}\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n    </div>\n  );\n};\n\n// export default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}